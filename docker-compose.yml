version: '3.8'

services:
  broker:
    image: kaftarmq/broker:local
    ports:
      - "30000:20000"
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - net

  router:
    image: kaftarmq/router:local
    ports:
      - "30004:20004"
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - net

  nginx:
    image: my-nginx-image:latest
    ports:
      - "80:80"
    tty: true
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    depends_on:
      - broker
      - router
    networks:
      - net
        
  prometheus:
    image: bitnami/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9092:9090"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - net
    command:
    - '--web.enable-lifecycle'
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.console.templates=/usr/share/prometheus/consoles'
    - '--web.enable-admin-api'
      
#  grafana:
#    image: grafana/grafana:latest
#    ports:
#      - "3000:3000"
#    volumes:
#      - grafana_data:/var/lib/grafana
#    depends_on:
#      - prometheus
#    networks:
#      - net
networks:
  net: