version: '3.8'

services:
  broker:
    image: kaftarmq/broker:local
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - net

  router:
    image: kaftarmq/router:local
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - net

  syncer:
    image: kaftarmq/syncer:local
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - net

  nginx:
    image: my-nginx-image:latest
    ports:
      - "80:80"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    depends_on:
      - broker
      - router
      - syncer
    networks:
      - net

  prometheus:
    image: bitnami/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./rules.yml:/etc/prometheus/rules.yml  # Mount the rules file
    ports:
      - "9092:9090"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - net
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "13000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - net
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DATASOURCES_DEFAULT_URL=http://prometheus:9090
      - GF_DATASOURCES_DEFAULT_NAME=Prometheus
      - GF_DATASOURCES_DEFAULT_TYPE=prometheus
      - GF_DATASOURCES_DEFAULT_ACCESS=proxy
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
  
  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - net
    deploy:
      mode: global  # This deploys node_exporter on every node in the swarm
      placement:
        constraints: [ node.role == manager ]  # Adjust if you want to deploy on workers too

networks:
  net:

volumes:
  grafana_data:
